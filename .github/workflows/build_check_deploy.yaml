on: [push]

name: R-CMD-check

jobs:
  build_check_deploy:
    runs-on: ubuntu-latest
    container: bioconductor/bioconductor_docker:devel
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
    steps:
      - uses: actions/checkout@v2

      # This lets us augment with additional dependencies
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          options(repos = c(CRAN = "https://cran.r-project.org"))
          BiocManager::repositories()
          remotes::install_deps(dependencies = TRUE, repos = BiocManager::repositories(), Ncpu = 2L)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: check-results
          path: check

      - name: BiocCheck
        run: |
          BiocManager::install("BiocCheck")
          BiocCheck::BiocCheck(".")
        shell: Rscript {0}

      - name: Install covr
        run: |
           install.packages("covr")
        shell: Rscript {0}

      - name: Test coverage
        run: |
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      - name: Install pkgdown
        run: |
           BiocManager::install("pkgdown")
        shell: Rscript {0}

      - name: Build pkgdown
        run: |
           pkgdown::build_site(".")
        shell: Rscript {0}

      # deploy needs rsync? Seems so.
      - name: Install deploy dependencies
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          apt-get update && apt-get -y install rsync

      - name: Deploy ðŸš€
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs # The folder the action should deploy.
